[{"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\index.tsx":"1","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\reportWebVitals.ts":"2","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\App.tsx":"3","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\modules\\base_modules.ts":"4","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\component\\stock_list_button.tsx":"5","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\component\\chart.tsx":"6"},{"size":506,"mtime":1613514811000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1613514811000,"results":"9","hashOfConfig":"8"},{"size":2558,"mtime":1614087523420,"results":"10","hashOfConfig":"8"},{"size":1621,"mtime":1613514811000,"results":"11","hashOfConfig":"8"},{"size":1046,"mtime":1613514811000,"results":"12","hashOfConfig":"8"},{"size":1865,"mtime":1614087547680,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ayv2xt",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\index.tsx",[],"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\reportWebVitals.ts",[],"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\App.tsx",["29","30","31","32"],"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\modules\\base_modules.ts",["33","34"],"interface A_trade_data {\n  ticker: string;\n  trade_date: Date;\n  company_name: string;\n  insider_name: string;\n  price: number;\n  qty: number;\n  owned: number;\n  value: number;\n}\n// interface B_trade_data{\n//   data:object;\n//   date:Date;\n//   open:number;\n//   high:number;\n//   low:number;\n//   close:number;\n// }\n\nconst get_json_data = (url: string) => {\n  \n  let xmlhttp = new XMLHttpRequest();\n  let json_data: any;\n   \n  xmlhttp.onreadystatechange = () => {\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n      try {\n        json_data = JSON.parse(xmlhttp.responseText);\n      } catch (err) {\n        console.log(err.message + \" in \" + xmlhttp.responseText);\n        return;\n      }\n    }\n  };\n  xmlhttp.open(\"GET\", url, false);\n  xmlhttp.send();\n  return json_data;\n};\nfunction search_data(input_txt: string, stock_data: A_trade_data[]) {\n  const filtered_stock_data = stock_data.filter(function (element: A_trade_data) {\n    return element.ticker.includes(input_txt) || element.company_name.includes(input_txt);\n    \n  });\n  return filtered_stock_data;\n}\nfunction getFormatDate(input_date: Date, form: string) {\n  const date = new Date(input_date);\n  const num2str = (num: number) => {\n    let result;\n    if (num < 10) {\n      result = \"0\" + num;\n    } else {\n      result = String(num);\n    }\n    return result;\n  };\n  let year: number = date.getFullYear(); //yyyy\n  let month: string = num2str(1 + date.getMonth()); //M\n  let day: string = num2str(date.getDate());\n\n  return year + form + month + form + day;\n}\n\nexport { get_json_data, getFormatDate, search_data };\nexport type { A_trade_data };\n",["35","36"],"D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\component\\stock_list_button.tsx",["37","38","39","40","41","42","43"],"import React from \"react\";\nimport { A_trade_data, getFormatDate } from \"../modules/base_modules\";\nimport { Button, ButtonGroup, ButtonToolbar, DropdownToggle, ButtonDropdown, DropdownMenu, DropdownItem } from \"reactstrap\";\n\nconst Stock_list_button = (props: any) => {\n  const srch_txt = props.search_txt;\n  const stock_list_data: any = props.list_data;\n  \n  const stock_item = (list_data: A_trade_data) => {\n    return (\n      <>\n        <Button><a onClick={() => props.onclick_fn(list_data)}>\n          <ul>  \n            <li><h4>{list_data.ticker}</h4></li>\n            <li>{list_data.company_name}</li>\n            <li><h6>{list_data.insider_name}</h6></li>\n            <li>{getFormatDate(list_data.trade_date, \"-\")}</li>\n          </ul>\n          </a>\n        </Button>\n      </>\n    );\n  };\n  const stock_list = stock_list_data.map((list_data: A_trade_data) => stock_item(list_data));\n  \n  return (\n    <div className=\"stock_list\">\n      <ButtonGroup vertical>{stock_list}</ButtonGroup>\n    </div>\n  );\n};\n\nexport default Stock_list_button;\n","D:\\Users\\Leehyeokjae\\Workspace\\VSC_Workspace\\GitHub\\insider-trade-dashboard\\src\\component\\chart.tsx",["44","45","46"],{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":9,"column":10,"nodeType":"49","messageId":"50","endLine":9,"endColumn":15},{"ruleId":"47","severity":1,"message":"52","line":10,"column":10,"nodeType":"49","messageId":"50","endLine":10,"endColumn":30},{"ruleId":"53","severity":1,"message":"54","line":58,"column":9,"nodeType":"55","endLine":58,"endColumn":115},{"ruleId":"56","severity":1,"message":"57","line":26,"column":28,"nodeType":"58","messageId":"59","endLine":26,"endColumn":30},{"ruleId":"56","severity":1,"message":"57","line":26,"column":51,"nodeType":"58","messageId":"59","endLine":26,"endColumn":53},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"47","severity":1,"message":"64","line":3,"column":31,"nodeType":"49","messageId":"50","endLine":3,"endColumn":44},{"ruleId":"47","severity":1,"message":"65","line":3,"column":46,"nodeType":"49","messageId":"50","endLine":3,"endColumn":60},{"ruleId":"47","severity":1,"message":"66","line":3,"column":62,"nodeType":"49","messageId":"50","endLine":3,"endColumn":76},{"ruleId":"47","severity":1,"message":"67","line":3,"column":78,"nodeType":"49","messageId":"50","endLine":3,"endColumn":90},{"ruleId":"47","severity":1,"message":"68","line":3,"column":92,"nodeType":"49","messageId":"50","endLine":3,"endColumn":104},{"ruleId":"47","severity":1,"message":"69","line":6,"column":9,"nodeType":"49","messageId":"50","endLine":6,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":12,"column":17,"nodeType":"55","endLine":12,"endColumn":64},{"ruleId":"47","severity":1,"message":"72","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},{"ruleId":"47","severity":1,"message":"73","line":1,"column":38,"nodeType":"49","messageId":"50","endLine":1,"endColumn":46},{"ruleId":"47","severity":1,"message":"74","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":23},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'chart' is defined but never used.","'ListGroupItemHeading' is defined but never used.","react/jsx-pascal-case","Imported JSX component Stock_list_button must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'ButtonToolbar' is defined but never used.","'DropdownToggle' is defined but never used.","'ButtonDropdown' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'srch_txt' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'useState' is defined but never used.","'getFormatDate' is defined but never used.","no-global-assign","no-unsafe-negation"]