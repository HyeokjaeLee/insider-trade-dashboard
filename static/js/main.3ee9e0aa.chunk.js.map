{"version":3,"sources":["modules/base_modules.ts","components/info_selector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["get_json_data","url","json_data","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","err","console","log","message","open","send","getFormatDate","input_date","form","date","Date","num2str","num","String","getFullYear","getMonth","getDate","Info_selector","props","result","data","map","style","padding","backgroundColor","borderRadius","color","marginLeft","paddingX","paddingY","marginStart","weight","company_name","float","fontWeight","ticker","insider_name","trade_date","width","borderBottomRightRadius","borderTopRightRadius","App","useState","test","test2","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAWMA,G,MAAgB,SAACC,GACrB,IACIC,EADAC,EAAU,IAAIC,eAclB,OAZAD,EAAQE,mBAAqB,WAC3B,GAA0B,GAAtBF,EAAQG,YAAqC,KAAlBH,EAAQI,OACrC,IACEL,EAAYM,KAAKC,MAAMN,EAAQO,cAC/B,MAAOC,GAEP,YADAC,QAAQC,IAAIF,EAAIG,QAAU,OAASX,EAAQO,gBAKjDP,EAAQY,KAAK,MAAOd,GAAK,GACzBE,EAAQa,OACDd,IAMT,SAASe,EAAcC,EAAkBC,GACvC,IAAMC,EAAO,IAAIC,KAAKH,GAChBI,EAAU,SAACC,GAOf,OALIA,EAAM,GACC,IAAMA,EAENC,OAAOD,IAQpB,OAJmBH,EAAKK,cAIVN,EAHMG,EAAQ,EAAIF,EAAKM,YAGRP,EAFXG,EAAQF,EAAKO,WCxCjC,SAASC,EAAcC,GACrB,IACMC,EADWD,EAAME,KACgBC,KAAI,SAACD,GAAD,OACzC,oBAAIE,MAAO,CAAEC,QAAS,OAAtB,SACE,qBAAKD,MAAO,CAAEE,gBAAiB,UAAWC,aAAc,OAAQC,MAAO,QAASC,WAAY,QAA5F,SACE,eAAC,IAAD,CAAKC,SAAU,EAAGC,SAAU,EAAGC,YAAa,EAA5C,UACE,eAAC,IAAD,CAAMC,OAAO,OAAb,UACGX,EAAKY,aACN,sBAAMV,MAAO,CAAEW,MAAO,QAASC,WAAY,UAA3C,SAAwDd,EAAKe,YAE/D,cAAC,IAAD,UAAOf,EAAKgB,eACZ,cAAC,IAAD,UAAO9B,EAAcc,EAAKiB,WAAY,iBAK9C,OAAO,oBAAIf,MAAO,CAAEE,gBAAiB,UAAWc,MAAO,MAAOf,QAAS,KAAMgB,wBAAyB,OAAQC,qBAAsB,QAA7H,SAAwIrB,ICfjJ,IACMC,EAAuB/B,EADZ,oDAgBFoD,MAbf,WAAgB,IAAD,EACYC,mBFoBlBrD,EADS,0CEnB+B,OFmB/B,oDEpBH,mBACNsD,EADM,KAETC,GAFS,KAED/B,OAAO8B,IACnB,OACE,mCACE,sBAAKE,UAAU,OAAf,UACGD,EACD,cAAC3B,EAAD,CAAeG,KAAMA,UCFd0B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ee9e0aa.chunk.js","sourcesContent":["interface A_trade_data {\r\n  ticker: string;\r\n  trade_date: Date;\r\n  company_name: string;\r\n  insider_name: string;\r\n  price: number;\r\n  qty: number;\r\n  owned: number;\r\n  value: number;\r\n}\r\nconst IEX_API_token = \"pk_6f85e99e8b8a4ba78ff077b5d532a533\";\r\nconst get_json_data = (url: string) => {\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let json_data: any;\r\n  xmlhttp.onreadystatechange = () => {\r\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n      try {\r\n        json_data = JSON.parse(xmlhttp.responseText);\r\n      } catch (err) {\r\n        console.log(err.message + \" in \" + xmlhttp.responseText);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  xmlhttp.open(\"GET\", url, false); //true는 비동기식, false는 동기식 true로 할시 변수 변경전에 웹페이지가 떠버림\r\n  xmlhttp.send();\r\n  return json_data;\r\n};\r\nconst get_IEX_data = (ticker: string) => {\r\n  const get_URL = \"https://cloud.iexapis.com/stable/stock/\" + ticker + \"/book?token=\" + IEX_API_token;\r\n  return get_json_data(get_URL);\r\n};\r\nfunction getFormatDate(input_date: Date, form: string) {\r\n  const date = new Date(input_date);\r\n  const num2str = (num: number) => {\r\n    let result;\r\n    if (num < 10) {\r\n      result = \"0\" + num;\r\n    } else {\r\n      result = String(num);\r\n    }\r\n    return result;\r\n  };\r\n  let year: number = date.getFullYear(); //yyyy\r\n  let month: string = num2str(1 + date.getMonth()); //M\r\n  let day: string = num2str(date.getDate());\r\n\r\n  return year + form + month + form + day;\r\n}\r\n\r\nexport { get_json_data, getFormatDate, get_IEX_data };\r\nexport type { A_trade_data };\r\n","import { Box, Text } from \"gestalt\";\r\nimport React from \"react\";\r\nimport \"gestalt/dist/gestalt.css\";\r\nimport type { A_trade_data } from \"../modules/base_modules\";\r\nimport { getFormatDate } from \"../modules/base_modules\";\r\nfunction Info_selector(props: any) {\r\n  const data_set = props.data;\r\n  const result: JSX.Element[] = data_set.map((data: A_trade_data) => (\r\n    <li style={{ padding: \"1px\" }}>\r\n      <div style={{ backgroundColor: \"#F9EBDE\", borderRadius: \"10px\", color: \"white\", marginLeft: \"-10%\" }}>\r\n        <Box paddingX={1} paddingY={1} marginStart={5}>\r\n          <Text weight=\"bold\">\r\n            {data.company_name}\r\n            <span style={{ float: \"right\", fontWeight: \"normal\" }}>{data.ticker}</span>\r\n          </Text>\r\n          <Text>{data.insider_name}</Text>\r\n          <Text>{getFormatDate(data.trade_date, \"-\")}</Text>\r\n        </Box>\r\n      </div>\r\n    </li>\r\n  ));\r\n  return <ul style={{ backgroundColor: \"#C5BAB0\", width: \"25%\", padding: \"2%\", borderBottomRightRadius: \"10px\", borderTopRightRadius: \"10px\" }}>{result}</ul>;\r\n}\r\n\r\nexport { Info_selector };\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Insider_trade_info from \"./components/insider_trade_info\";\nimport { Info_selector } from \"./components/info_selector\";\nimport { get_json_data, get_IEX_data } from \"./modules/base_modules\";\nimport type { A_trade_data } from \"./modules/base_modules\";\nconst data_url = \"https://toy-projects-api.herokuapp.com/tradeinfo\";\nconst data: A_trade_data[] = get_json_data(data_url);\n\nfunction App() {\n  const [test, set_test] = useState(get_IEX_data(\"WRLD\"));\n  let test2 = String(test);\n  return (\n    <>\n      <div className=\"body\">\n        {test2}\n        <Info_selector data={data} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}